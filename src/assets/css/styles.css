/*
 * reStart Boilerplate / reStart Angular
 * Author: Kim Maida 
 * Author URI: <http://kim-maida.com>
 * Source: <https://github.com/kmaida/reStart-angular>
 * License: GNU Public License
*/
/*-- Core --*/
/*--------------------
	COLOR VARIABLES
--------------------*/
/*-- Color definitions --*/
/* Hex code names from http://name-of-color.com/ */
/* Color partially defined by opacity */
/*-- Color by function --*/
/*--------------------
	LAYOUT VARIABLES
--------------------*/
/*-- Padding --*/
/*--------------------
	  RESPONSIVE
--------------------*/
/*-- Variables --*/
/*-- Mixins --*/
/*--------------------
	  CSS RESET
--------------------*/
html, body, div, span, h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins,
kbd, q, s, samp, small, strong, tt, var, dl, dt,
dd, ol, ul, li, fieldset, form, input, button, textarea, label, legend, table, caption,
tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  margin: 0;
  padding: 0;
  border: 0;
  border-radius: 0;
  /* for iOS */
  font-weight: inherit;
  font-style: inherit;
  font-family: inherit;
  line-height: 1;
  text-decoration: none;
  vertical-align: baseline; }

html {
  overflow-y: scroll;
  -webkit-text-size-adjust: 100%; }

ol, ul {
  list-style: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

caption, th, td {
  text-align: left;
  font-weight: normal; }

sup, sub {
  line-height: 1; }

h1, h2, h3, h4, h5, h6 {
  font-weight: normal; }

article, aside, canvas, details, figcaption, figure, footer, header, hgroup, menu, nav, section {
  display: block; }

*, *:before, *:after {
  box-sizing: border-box; }

/*--------------------
	   BASICS
--------------------*/
/*-- Normalize --*/
em {
  font-style: italic; }

strong {
  font-weight: bold; }

q:lang(en) {
  quotes: '&#8220;' '&#8221;' '&#8216;' '&#8217;'; }

h1, h2, h3, h4, h5, h6, p {
  margin-bottom: 15px; }

ul {
  list-style: outside disc;
  padding-left: 24px; }

ol {
  list-style: outside decimal;
  padding-left: 24px; }

a, label, input[type=button], input[type=submit], button {
  cursor: pointer; }

del {
  text-decoration: line-through; }

abbr[title], dfn[title] {
  border-bottom: 1px dotted;
  cursor: help; }

pre, code {
  background: #eee;
  border: 1px solid #ccc;
  font-family: Consolas, 'Lucida Console', 'Courier New', serif;
  padding: 2%; }

input, select, textarea {
  border: 1px solid #ccc;
  font-family: inherit;
  font-size: inherit;
  padding: 3px 6px; }

input, select {
  vertical-align: middle; }

textarea {
  overflow: auto; }

/* prevents scrollbar from showing up when unneeded in IE */
small, sup, sub {
  font-size: 85%; }

sup {
  vertical-align: super; }

sub {
  vertical-align: sub; }

table {
  margin: 10px 0;
  padding: 3px; }

thead {
  border-bottom: 2px solid #ccc; }

th {
  font-weight: bold; }

th, tr, td {
  padding: 4px 12px; }

tr {
  border-bottom: 1px solid #ccc; }

/*-- Clearfix --*/
.clearfix:before,
.clearfix:after {
  content: " ";
  display: table; }

.clearfix:after {
  clear: both; }

.ie7 .clearfix {
  zoom: 1; }

/*-- ng-cloak: prevent FOUC before Angular JavaScript loads --*/
[ng\:cloak],
[ng-cloak],
[data-ng-cloak],
[x-ng-cloak],
.ng-cloak,
.x-ng-cloak {
  display: none !important; }

/*-- Image Replacement --*/
.ir {
  overflow: hidden;
  text-indent: 200%;
  white-space: nowrap; }

/*-- Inline link touch targets --*/
.touch p a {
  margin: 0 -.5em;
  padding: 0 .5em; }

/*-- Forms --*/
input[type="text"],
input[type="number"],
input[type="password"],
textarea {
  font-size: 16px;
  /* for iOS phones */ }

input.ng-dirty.ng-invalid {
  border-color: rgba(169, 68, 66, 0.6);
  box-shadow: 0 0 6px rgba(169, 68, 66, 0.6); }

button {
  border-radius: 4px;
  display: inline-block;
  font-size: inherit;
  padding: 5px 4px;
  vertical-align: middle; }

/*--------------------
	   FONTS
--------------------*/
/* Full @font-face declaration */
/*--------------------
	 PRESENTATION
--------------------*/
body {
  background: #eee;
  color: #333;
  font: normal 16px/1.2 'Helvetica Neue', Helvetica, Arial, Verdana, sans-serif; }

.layout-canvas {
  background: #fff; }

/*------------------------------------------------------------------------- Content --*/
.content-wrapper {
  padding: 3%; }
  @media screen and (min-width: 768px) {
    .content-wrapper {
      padding: 1.5% 3%; } }

.content-heading {
  font-size: 36px;
  margin: -1.5% 0 20px; }
  @media screen and (min-width: 768px) {
    .content-heading {
      margin-top: 0;
      text-align: center; } }

/*--------------------
 LAYOUT FUNCTIONALITY
--------------------*/
body {
  min-width: 320px; }

.layout-overflow {
  overflow: hidden;
  /* necessary to handle offcanvas scrollbar behavior */ }

/*------------------------------------------------------------------------- Off-canvas Functionality --*/
/*-- Content canvas wrapper --*/
.layout-canvas {
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  position: relative;
  left: 0;
  width: 100%; }
  @media screen and (min-width: 768px) {
    .layout-canvas {
      -webkit-transition: none;
      transition: none;
      -webkit-transform: none;
      -ms-transform: none;
      transform: none; } }
  .csstransforms3d .layout-canvas {
    -webkit-transition: -webkit-transform 250ms ease;
    transition: transform 250ms ease;
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0); }
  .csstransforms3d .nav-open .layout-canvas {
    -webkit-transform: translate3d(270px, 0, 0);
    transform: translate3d(270px, 0, 0); }
  .no-csstransforms3d .nav-open .layout-canvas {
    left: 270px; }

/*-- Header --*/
@media screen and (min-width: 768px) {
  .header-mobile-page {
    display: none; } }

/*-- Navigation --*/
.header .nav {
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  display: none;
  /* deal with FOUC */
  height: 100%;
  overflow-y: auto;
  position: absolute;
  top: 0;
  width: 270px; }
  @media screen and (min-width: 768px) {
    .header .nav {
      display: block;
      position: relative;
      width: 100%; } }
  .nav-closed .header .nav,
  .nav-open .header .nav {
    display: block;
    /* deal with FOUC */ }
  .csstransforms3d .header .nav {
    -webkit-transform: translate3d(-100%, 0, 0);
    transform: translate3d(-100%, 0, 0); }
    @media screen and (min-width: 768px) {
      .csstransforms3d .header .nav {
        -webkit-transform: none;
        -ms-transform: none;
        transform: none; } }
  .no-csstransforms3d .nav-closed .header .nav {
    left: -100%; }
  .no-csstransforms3d .nav-open .header .nav {
    left: -270px; }
    @media screen and (min-width: 768px) {
      .no-csstransforms3d .nav-open .header .nav {
        left: 0; } }

/*--------------------
	   PRINT
--------------------*/
@media print {
  * {
    background: #fff; }
  body {
    color: #000;
    font: normal 16px/1.4 Georgia, 'Times New Roman', serif; }
  /*-- Hidden Elements --*/
  .header,
  .footer {
    display: none; }
  /*-- Show link URLs --*/
  a:link,
  a:visited {
    color: blue;
    text-decoration: underline; }
  a:link:after,
  a:visited:after {
    content: " [" attr(href) "] ";
    font-size: 75%; } }

/*-- Modules --*/
/*--------------------
	    HEADER
--------------------*/
.header-mobile-page {
  background: #555;
  color: #fff;
  height: 50px;
  margin-bottom: 10px;
  position: relative; }
  .header-mobile-page-siteTitle {
    font-size: 30px;
    line-height: 50px;
    margin: 0;
    padding: 0 0 0 50px;
    position: absolute;
    top: 0;
    text-align: center;
    width: 100%; }

/*--------------------
	 NAVIGATION
--------------------*/
/*------------------------------------------------------------------------- Hamburger menu toggle --*/
.toggle-offcanvas {
  background: #555;
  border-right: 1px solid rgba(255, 255, 255, 0.5);
  display: inline-block;
  height: 50px;
  padding: 23.5px 13px;
  position: relative;
  text-align: center;
  width: 50px;
  z-index: 100; }
  .toggle-offcanvas span,
  .toggle-offcanvas span:before,
  .toggle-offcanvas span:after {
    background: #fff;
    border-radius: 1px;
    content: '';
    display: block;
    height: 3px;
    position: absolute;
    -webkit-transition: all 250ms ease-in-out;
    transition: all 250ms ease-in-out;
    width: 24px; }
  .toggle-offcanvas span:before {
    top: -9px; }
  .toggle-offcanvas span:after {
    bottom: -9px; }
  .nav-open .toggle-offcanvas span {
    background: transparent; }
    .nav-open .toggle-offcanvas span:before, .nav-open .toggle-offcanvas span:after {
      top: 0; }
    .nav-open .toggle-offcanvas span:before {
      -webkit-transform: rotate(45deg);
      -ms-transform: rotate(45deg);
      transform: rotate(45deg); }
    .nav-open .toggle-offcanvas span:after {
      -webkit-transform: rotate(-45deg);
      -ms-transform: rotate(-45deg);
      transform: rotate(-45deg); }

/*------------------------------------------------------------------------- Navigation --*/
.header .nav {
  box-shadow: inset -8px 0 8px -6px rgba(0, 0, 0, 0.2);
  padding: 3%; }
  @media screen and (min-width: 768px) {
    .header .nav {
      background: #555;
      box-shadow: none;
      padding: 1.5% 3%; } }
  .header .nav .active .nav-list-item-text {
    font-weight: bold; }
    @media screen and (min-width: 768px) {
      .header .nav .active .nav-list-item-text {
        border-bottom: 1px solid rgba(255, 255, 255, 0.5); } }
  .header .nav-list {
    list-style: none;
    margin-bottom: 0;
    padding-left: 0; }
    .header .nav-list a {
      display: block;
      padding: 6px; }
      .header .nav-list a:hover, .header .nav-list a:active, .header .nav-list a:focus {
        text-decoration: none; }
    @media screen and (min-width: 768px) {
      .header .nav-list {
        display: -webkit-box;
        display: -webkit-flex;
        display: -ms-flexbox;
        display: flex;
        -webkit-flex-wrap: wrap;
        -ms-flex-wrap: wrap;
        flex-wrap: wrap;
        -webkit-box-pack: center;
        -webkit-justify-content: center;
        -ms-flex-pack: center;
        justify-content: center;
        padding: 0;
        width: 100%; }
        .header .nav-list a,
        .header .nav-list a:hover,
        .header .nav-list a:active,
        .header .nav-list a:focus {
          color: #fff; }
        .header .nav-list li {
          padding: 0 20px; } }

/*--------------------
	    FOOTER
--------------------*/
.footer {
  padding: 3%;
  text-align: center; }
  @media screen and (min-width: 768px) {
    .footer {
      padding: 1.5% 3%; } }

/*--------------------
	    LOADING
--------------------*/
.loading-wrapper {
  height: 100%;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  z-index: 999; }

.loading-overlay {
  background: rgba(255, 255, 255, 0.9);
  position: absolute;
  top: 0;
  bottom: 0;
  width: 100%; }

.loading-spinner {
  margin: -16px 0 0 -16px;
  position: absolute;
  top: 50%;
  left: 50%; }

/*-- Pages --*/
/*--------------------
	    404
--------------------*/

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3N0ZGluIiwiY29yZS9wYXJ0aWFscy9fY29sb3JzLnZhcnMuc2NzcyIsImNvcmUvcGFydGlhbHMvX2xheW91dC52YXJzLnNjc3MiLCJjb3JlL3BhcnRpYWxzL19yZXNwb25zaXZlLnBhcnRpYWwuc2NzcyIsImNvcmUvX2Jhc2Uuc2NzcyIsInN0eWxlcy5jc3MiLCJjb3JlL19mb250cy5zY3NzIiwiY29yZS9fcHJlc2VudGF0aW9uLnNjc3MiLCJjb3JlL19sYXlvdXQuc2NzcyIsImNvcmUvX3ByaW50LnNjc3MiLCJtb2R1bGVzL19oZWFkZXIuc2NzcyIsIm1vZHVsZXMvX25hdi5zY3NzIiwibW9kdWxlcy9fZm9vdGVyLnNjc3MiLCJtb2R1bGVzL19sb2FkaW5nLnNjc3MiLCJwYWdlcy9fNDA0LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztFQU1FO0FBRUYsY0FBYztBQ1JkOztzQkFFc0I7QUFFdEIsMkJBQTJCO0FBRTNCLG1EQUFtRDtBQVNuRCx3Q0FBd0M7QUFLeEMsMkJBQTJCO0FDcEIzQjs7c0JBRXNCO0FBRXRCLGlCQUFpQjtBQ0pqQjs7c0JBRXNCO0FBRXRCLG1CQUFtQjtBQUtuQixnQkFBZ0I7QUNUaEI7O3NCQUVzQjtBQUV0Qjs7Ozs7OztFQU9DLFVBQVU7RUFBRSxXQUFXO0VBQ3ZCLFVBQVU7RUFDVixpQkFBaUI7RUFBRSxhQUFhO0VBQ2hDLHFCQUFxQjtFQUFFLG9CQUFvQjtFQUFFLHFCQUFxQjtFQUNsRSxlQUFlO0VBQ2Ysc0JBQXNCO0VBQ3RCLHlCQUF5QixFQUN6Qjs7QUFDRDtFQUFPLG1CQUFtQjtFQUFFLCtCQUErQixFQUFJOztBQUMvRDtFQUFTLGlCQUFpQixFQUFJOztBQUM5QjtFQUFRLDBCQUEwQjtFQUFFLGtCQUFrQixFQUFJOztBQUMxRDtFQUFrQixpQkFBaUI7RUFBRSxvQkFBb0IsRUFBSTs7QUFDN0Q7RUFBVyxlQUFlLEVBQUk7O0FBQzlCO0VBQXlCLG9CQUFvQixFQUFJOztBQUNq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LG1CQUFtQixFQUtuQjtFVENBO0lTUkQ7TUFLRSxpQlZGNEIsRVVJN0IsRUFBQTs7QUNYRDs7c0JBRXNCO0FBRXRCO0VBRUUsYUFBYTtFQUNiLGdCQUFnQjtFQUNmLE9BQU87RUFBRSxRQUFRO0VBQ2xCLFlBQVk7RUFDWixhQUFhLEVBQ2I7O0FBUEY7RUFTRSxxQ0FBZ0I7RUFDaEIsbUJBQW1CO0VBQ2xCLE9BQU87RUFBRSxVQUFVO0VBQ3BCLFlBQVksRUFDWjs7QUFiRjtFQWVFLHdCQUF3QjtFQUN4QixtQkFBbUI7RUFDbEIsU0FBUztFQUFFLFVBQVUsRUFDdEI7O0FiTUYsZUFBZTtBYzVCZjs7c0JBRXNCIiwiZmlsZSI6InN0eWxlcy5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxyXG4gKiByZVN0YXJ0IEJvaWxlcnBsYXRlIC8gcmVTdGFydCBBbmd1bGFyXHJcbiAqIEF1dGhvcjogS2ltIE1haWRhIFxyXG4gKiBBdXRob3IgVVJJOiA8aHR0cDovL2tpbS1tYWlkYS5jb20+XHJcbiAqIFNvdXJjZTogPGh0dHBzOi8vZ2l0aHViLmNvbS9rbWFpZGEvcmVTdGFydC1hbmd1bGFyPlxyXG4gKiBMaWNlbnNlOiBHTlUgUHVibGljIExpY2Vuc2VcclxuKi9cclxuXHJcbi8qLS0gQ29yZSAtLSovXHJcblxyXG4vLyBwYXJ0aWFsc1xyXG5AaW1wb3J0ICdjb3JlL3BhcnRpYWxzL2NvbG9ycy52YXJzJztcclxuQGltcG9ydCAnY29yZS9wYXJ0aWFscy9sYXlvdXQudmFycyc7XHJcbkBpbXBvcnQgJ2NvcmUvcGFydGlhbHMvcmVzcG9uc2l2ZS5wYXJ0aWFsJztcclxuXHJcbkBpbXBvcnQgJ2NvcmUvYmFzZSc7XHJcbkBpbXBvcnQgJ2NvcmUvZm9udHMnO1xyXG5AaW1wb3J0ICdjb3JlL3ByZXNlbnRhdGlvbic7XHJcbkBpbXBvcnQgJ2NvcmUvbGF5b3V0JztcclxuQGltcG9ydCAnY29yZS9wcmludCc7XHJcblxyXG4vKi0tIE1vZHVsZXMgLS0qL1xyXG5cclxuQGltcG9ydCAnbW9kdWxlcy9oZWFkZXInO1xyXG5AaW1wb3J0ICdtb2R1bGVzL25hdic7XHJcbkBpbXBvcnQgJ21vZHVsZXMvZm9vdGVyJztcclxuQGltcG9ydCAnbW9kdWxlcy9sb2FkaW5nJztcclxuXHJcbi8qLS0gUGFnZXMgLS0qL1xyXG5cclxuQGltcG9ydCAncGFnZXMvNDA0JzsiLCIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblx0Q09MT1IgVkFSSUFCTEVTXHJcbi0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuXHJcbi8qLS0gQ29sb3IgZGVmaW5pdGlvbnMgLS0qL1xyXG5cclxuLyogSGV4IGNvZGUgbmFtZXMgZnJvbSBodHRwOi8vbmFtZS1vZi1jb2xvci5jb20vICovXHJcblxyXG4kY29sb3ItYmxhY2s6ICMwMDA7XHJcbiRjb2xvci13aGl0ZTogI2ZmZjtcclxuJGNvbG9yLW1pbmVTaGFmdDogIzMzMztcclxuJGNvbG9yLWRhdnlzR3JheTogIzU1NTtcclxuJGNvbG9yLWNlbGVzdGU6ICNjY2M7XHJcbiRjb2xvci1nYWxsZXJ5OiAjZWVlO1xyXG5cclxuLyogQ29sb3IgcGFydGlhbGx5IGRlZmluZWQgYnkgb3BhY2l0eSAqL1xyXG5cclxuJGNvbG9yLWdyYXktcmdiYTogcmdiYSgyNTUsMjU1LDI1NSwuNSk7XHJcbiRjb2xvci1yZWQtcmdiYTogcmdiYSgxNjksNjgsNjYsLjYpO1xyXG5cclxuLyotLSBDb2xvciBieSBmdW5jdGlvbiAtLSovXHJcblxyXG4kY29sb3ItYmctbGlnaHQ6ICRjb2xvci1nYWxsZXJ5O1xyXG4kY29sb3ItYmc6ICRjb2xvci13aGl0ZTtcclxuJGNvbG9yLWJvcmRlcjogJGNvbG9yLWNlbGVzdGU7XHJcbiRjb2xvci1tb2R1bGUtYmc6ICRjb2xvci1jZWxlc3RlO1xyXG4kY29sb3ItbmF2LWJnOiAkY29sb3ItZGF2eXNHcmF5O1xyXG4kY29sb3ItdGV4dDogJGNvbG9yLW1pbmVTaGFmdDtcclxuJGNvbG9yLWxpbmstY29udHJhc3Q6ICRjb2xvci13aGl0ZTtcclxuJGNvbG9yLWRpc2FibGVkLXJnYmE6ICRjb2xvci1ncmF5LXJnYmE7XHJcbiRjb2xvci1pbnZhbGlkLXJnYmE6ICRjb2xvci1yZWQtcmdiYTsiLCIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblx0TEFZT1VUIFZBUklBQkxFU1xyXG4tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcblxyXG4vKi0tIFBhZGRpbmcgLS0qL1xyXG5cclxuJHBhZGRpbmctc2NyZWVuLXNtYWxsOiAzJTtcclxuJHBhZGRpbmctc2NyZWVuLWxhcmdlOiAxLjUlIDMlOyIsIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHQgIFJFU1BPTlNJVkVcclxuLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG5cclxuLyotLSBWYXJpYWJsZXMgLS0qL1xyXG5cclxuJG1xLXNtYWxsOiAnc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjdweCknO1xyXG4kbXEtbGFyZ2U6ICdzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSc7XHJcblxyXG4vKi0tIE1peGlucyAtLSovXHJcblxyXG5AbWl4aW4gbXEoJG1xU3RyaW5nKSB7XHJcblx0QG1lZGlhICN7JG1xU3RyaW5nfSB7XHJcblx0XHRAY29udGVudDtcclxuXHR9XHJcbn0iLCIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblx0ICBDU1MgUkVTRVRcclxuLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG5cclxuaHRtbCwgYm9keSwgZGl2LCBzcGFuLCBoMSwgaDIsIGgzLCBoNCwgaDUsIGg2LCBwLCBibG9ja3F1b3RlLCBwcmUsXHJcbmEsIGFiYnIsIGFjcm9ueW0sIGFkZHJlc3MsIGJpZywgY2l0ZSwgY29kZSwgZGVsLCBkZm4sIGVtLCBpbWcsIGlucyxcclxua2JkLCBxLCBzLCBzYW1wLCBzbWFsbCwgc3Ryb25nLCB0dCwgdmFyLCBkbCwgZHQsXHJcbmRkLCBvbCwgdWwsIGxpLCBmaWVsZHNldCwgZm9ybSwgaW5wdXQsIGJ1dHRvbiwgdGV4dGFyZWEsIGxhYmVsLCBsZWdlbmQsIHRhYmxlLCBjYXB0aW9uLFxyXG50Ym9keSwgdGZvb3QsIHRoZWFkLCB0ciwgdGgsIHRkLFxyXG5hcnRpY2xlLCBhc2lkZSwgY2FudmFzLCBkZXRhaWxzLCBmaWdjYXB0aW9uLCBmaWd1cmUsXHJcbmZvb3RlciwgaGVhZGVyLCBoZ3JvdXAsIG1lbnUsIG5hdiwgc2VjdGlvbiB7XHJcblx0bWFyZ2luOiAwOyBwYWRkaW5nOiAwO1xyXG5cdGJvcmRlcjogMDtcclxuXHRib3JkZXItcmFkaXVzOiAwO1x0LyogZm9yIGlPUyAqL1xyXG5cdGZvbnQtd2VpZ2h0OiBpbmhlcml0OyBmb250LXN0eWxlOiBpbmhlcml0OyBmb250LWZhbWlseTogaW5oZXJpdDtcclxuXHRsaW5lLWhlaWdodDogMTtcclxuXHR0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcblx0dmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xyXG59XHJcbmh0bWwgeyBvdmVyZmxvdy15OiBzY3JvbGw7IC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgfVxyXG5vbCwgdWwgeyBsaXN0LXN0eWxlOiBub25lOyB9XHJcbnRhYmxlIHsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgYm9yZGVyLXNwYWNpbmc6IDA7IH1cclxuY2FwdGlvbiwgdGgsIHRkIHsgdGV4dC1hbGlnbjogbGVmdDsgZm9udC13ZWlnaHQ6IG5vcm1hbDsgfVxyXG5zdXAsIHN1YiB7IGxpbmUtaGVpZ2h0OiAxOyB9XHJcbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYgeyBmb250LXdlaWdodDogbm9ybWFsOyB9XHJcbmFydGljbGUsIGFzaWRlLCBjYW52YXMsIGRldGFpbHMsIGZpZ2NhcHRpb24sIGZpZ3VyZSwgZm9vdGVyLCBoZWFkZXIsIGhncm91cCwgbWVudSwgbmF2LCBzZWN0aW9uIHsgZGlzcGxheTogYmxvY2s7IH1cclxuKiwqOmJlZm9yZSwqOmFmdGVyIHtcclxuXHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG59XHJcblxyXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblx0ICAgQkFTSUNTXHJcbi0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuXHJcbi8qLS0gTm9ybWFsaXplIC0tKi9cclxuXHJcbmVtIHsgZm9udC1zdHlsZTogaXRhbGljOyB9XHJcbnN0cm9uZyB7IGZvbnQtd2VpZ2h0OiBib2xkOyB9XHJcbnE6bGFuZyhlbikgeyBxdW90ZXM6ICcmIzgyMjA7JyAnJiM4MjIxOycgJyYjODIxNjsnICcmIzgyMTc7JzsgfVxyXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2LCBwIHsgbWFyZ2luLWJvdHRvbTogMTVweDsgfVxyXG51bCB7IGxpc3Qtc3R5bGU6IG91dHNpZGUgZGlzYzsgcGFkZGluZy1sZWZ0OiAyNHB4OyB9XHJcbm9sIHsgbGlzdC1zdHlsZTogb3V0c2lkZSBkZWNpbWFsOyBwYWRkaW5nLWxlZnQ6IDI0cHg7IH1cclxuYSwgbGFiZWwsIGlucHV0W3R5cGU9YnV0dG9uXSwgaW5wdXRbdHlwZT1zdWJtaXRdLCBidXR0b24geyBjdXJzb3I6IHBvaW50ZXI7IH1cclxuZGVsIHsgdGV4dC1kZWNvcmF0aW9uOiBsaW5lLXRocm91Z2g7IH1cclxuYWJiclt0aXRsZV0sIGRmblt0aXRsZV0geyBib3JkZXItYm90dG9tOiAxcHggZG90dGVkOyBjdXJzb3I6IGhlbHA7IH1cclxucHJlLGNvZGUgeyBiYWNrZ3JvdW5kOiAjZWVlOyBib3JkZXI6IDFweCBzb2xpZCAjY2NjOyBmb250LWZhbWlseTogQ29uc29sYXMsICdMdWNpZGEgQ29uc29sZScsICdDb3VyaWVyIE5ldycsIHNlcmlmOyBwYWRkaW5nOiAyJTsgfVxyXG5pbnB1dCwgc2VsZWN0LCB0ZXh0YXJlYSB7IGJvcmRlcjogMXB4IHNvbGlkICNjY2M7IGZvbnQtZmFtaWx5OiBpbmhlcml0OyBmb250LXNpemU6IGluaGVyaXQ7IHBhZGRpbmc6IDNweCA2cHg7IH1cclxuaW5wdXQsIHNlbGVjdCB7IHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IH1cclxudGV4dGFyZWEgeyBvdmVyZmxvdzogYXV0bzsgfSAvKiBwcmV2ZW50cyBzY3JvbGxiYXIgZnJvbSBzaG93aW5nIHVwIHdoZW4gdW5uZWVkZWQgaW4gSUUgKi9cclxuc21hbGwsIHN1cCwgc3ViIHsgZm9udC1zaXplOiA4NSU7IH1cclxuc3VwIHsgdmVydGljYWwtYWxpZ246IHN1cGVyOyB9XHJcbnN1YiB7IHZlcnRpY2FsLWFsaWduOiBzdWI7IH1cclxudGFibGUgeyBtYXJnaW46IDEwcHggMDsgcGFkZGluZzogM3B4OyB9XHJcbnRoZWFkIHsgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICRjb2xvci1ib3JkZXI7IH1cclxudGggeyBmb250LXdlaWdodDogYm9sZDsgfVxyXG50aCwgdHIsIHRkIHsgcGFkZGluZzogNHB4IDEycHg7IH1cclxudHIgeyBib3JkZXItYm90dG9tOiAxcHggc29saWQgJGNvbG9yLWJvcmRlcn1cclxuXHJcbi8qLS0gQ2xlYXJmaXggLS0qL1xyXG5cclxuLmNsZWFyZml4OmJlZm9yZSxcclxuLmNsZWFyZml4OmFmdGVyIHtcclxuXHRjb250ZW50OiBcIiBcIjtcclxuXHRkaXNwbGF5OiB0YWJsZTtcclxufVxyXG4uY2xlYXJmaXg6YWZ0ZXIgeyBjbGVhcjogYm90aDsgfVxyXG4uaWU3IC5jbGVhcmZpeCB7IHpvb206IDE7IH1cclxuXHJcbi8qLS0gbmctY2xvYWs6IHByZXZlbnQgRk9VQyBiZWZvcmUgQW5ndWxhciBKYXZhU2NyaXB0IGxvYWRzIC0tKi9cclxuXHJcbltuZ1xcOmNsb2FrXSxcclxuW25nLWNsb2FrXSxcclxuW2RhdGEtbmctY2xvYWtdLFxyXG5beC1uZy1jbG9ha10sXHJcbi5uZy1jbG9hayxcclxuLngtbmctY2xvYWsge1xyXG5cdGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcclxufVxyXG5cclxuLyotLSBJbWFnZSBSZXBsYWNlbWVudCAtLSovXHJcblxyXG4uaXIge1xyXG5cdG92ZXJmbG93OiBoaWRkZW47XHJcblx0dGV4dC1pbmRlbnQ6IDIwMCU7XHJcblx0d2hpdGUtc3BhY2U6IG5vd3JhcDtcclxufVxyXG5cclxuLyotLSBJbmxpbmUgbGluayB0b3VjaCB0YXJnZXRzIC0tKi9cclxuXHJcbi50b3VjaCBwIGEge1xyXG5cdG1hcmdpbjogMCAtLjVlbTtcclxuXHRwYWRkaW5nOiAwIC41ZW07XHJcbn1cclxuXHJcbi8qLS0gRm9ybXMgLS0qL1xyXG5cclxuaW5wdXRbdHlwZT1cInRleHRcIl0sXHJcbmlucHV0W3R5cGU9XCJudW1iZXJcIl0sXHJcbmlucHV0W3R5cGU9XCJwYXNzd29yZFwiXSxcclxudGV4dGFyZWEge1xyXG5cdGZvbnQtc2l6ZTogMTZweDtcdC8qIGZvciBpT1MgcGhvbmVzICovXHJcbn1cclxuaW5wdXQubmctZGlydHkubmctaW52YWxpZCB7XHJcblx0Ym9yZGVyLWNvbG9yOiAkY29sb3ItaW52YWxpZC1yZ2JhO1xyXG5cdGJveC1zaGFkb3c6IDAgMCA2cHggJGNvbG9yLWludmFsaWQtcmdiYTtcclxufVxyXG5idXR0b24ge1xyXG5cdGJvcmRlci1yYWRpdXM6IDRweDtcclxuXHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcblx0Zm9udC1zaXplOiBpbmhlcml0O1xyXG5cdHBhZGRpbmc6IDVweCA0cHg7XHJcblx0dmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxufSIsIi8qXHJcbiAqIHJlU3RhcnQgQm9pbGVycGxhdGUgLyByZVN0YXJ0IEFuZ3VsYXJcclxuICogQXV0aG9yOiBLaW0gTWFpZGEgXHJcbiAqIEF1dGhvciBVUkk6IDxodHRwOi8va2ltLW1haWRhLmNvbT5cclxuICogU291cmNlOiA8aHR0cHM6Ly9naXRodWIuY29tL2ttYWlkYS9yZVN0YXJ0LWFuZ3VsYXI+XHJcbiAqIExpY2Vuc2U6IEdOVSBQdWJsaWMgTGljZW5zZVxyXG4qL1xuLyotLSBDb3JlIC0tKi9cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHRDT0xPUiBWQVJJQUJMRVNcclxuLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLyotLSBDb2xvciBkZWZpbml0aW9ucyAtLSovXG4vKiBIZXggY29kZSBuYW1lcyBmcm9tIGh0dHA6Ly9uYW1lLW9mLWNvbG9yLmNvbS8gKi9cbi8qIENvbG9yIHBhcnRpYWxseSBkZWZpbmVkIGJ5IG9wYWNpdHkgKi9cbi8qLS0gQ29sb3IgYnkgZnVuY3Rpb24gLS0qL1xuLyotLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cdExBWU9VVCBWQVJJQUJMRVNcclxuLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLyotLSBQYWRkaW5nIC0tKi9cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHQgIFJFU1BPTlNJVkVcclxuLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLyotLSBWYXJpYWJsZXMgLS0qL1xuLyotLSBNaXhpbnMgLS0qL1xuLyotLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cdCAgQ1NTIFJFU0VUXHJcbi0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmh0bWwsIGJvZHksIGRpdiwgc3BhbiwgaDEsIGgyLCBoMywgaDQsIGg1LCBoNiwgcCwgYmxvY2txdW90ZSwgcHJlLFxuYSwgYWJiciwgYWNyb255bSwgYWRkcmVzcywgYmlnLCBjaXRlLCBjb2RlLCBkZWwsIGRmbiwgZW0sIGltZywgaW5zLFxua2JkLCBxLCBzLCBzYW1wLCBzbWFsbCwgc3Ryb25nLCB0dCwgdmFyLCBkbCwgZHQsXG5kZCwgb2wsIHVsLCBsaSwgZmllbGRzZXQsIGZvcm0sIGlucHV0LCBidXR0b24sIHRleHRhcmVhLCBsYWJlbCwgbGVnZW5kLCB0YWJsZSwgY2FwdGlvbixcbnRib2R5LCB0Zm9vdCwgdGhlYWQsIHRyLCB0aCwgdGQsXG5hcnRpY2xlLCBhc2lkZSwgY2FudmFzLCBkZXRhaWxzLCBmaWdjYXB0aW9uLCBmaWd1cmUsXG5mb290ZXIsIGhlYWRlciwgaGdyb3VwLCBtZW51LCBuYXYsIHNlY3Rpb24ge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGJvcmRlcjogMDtcbiAgYm9yZGVyLXJhZGl1czogMDtcbiAgLyogZm9yIGlPUyAqL1xuICBmb250LXdlaWdodDogaW5oZXJpdDtcbiAgZm9udC1zdHlsZTogaW5oZXJpdDtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gIGxpbmUtaGVpZ2h0OiAxO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxuXG5odG1sIHtcbiAgb3ZlcmZsb3cteTogc2Nyb2xsO1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IH1cblxub2wsIHVsIHtcbiAgbGlzdC1zdHlsZTogbm9uZTsgfVxuXG50YWJsZSB7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIGJvcmRlci1zcGFjaW5nOiAwOyB9XG5cbmNhcHRpb24sIHRoLCB0ZCB7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7IH1cblxuc3VwLCBzdWIge1xuICBsaW5lLWhlaWdodDogMTsgfVxuXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2IHtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDsgfVxuXG5hcnRpY2xlLCBhc2lkZSwgY2FudmFzLCBkZXRhaWxzLCBmaWdjYXB0aW9uLCBmaWd1cmUsIGZvb3RlciwgaGVhZGVyLCBoZ3JvdXAsIG1lbnUsIG5hdiwgc2VjdGlvbiB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbiosICo6YmVmb3JlLCAqOmFmdGVyIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgfVxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblx0ICAgQkFTSUNTXHJcbi0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbi8qLS0gTm9ybWFsaXplIC0tKi9cbmVtIHtcbiAgZm9udC1zdHlsZTogaXRhbGljOyB9XG5cbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkOyB9XG5cbnE6bGFuZyhlbikge1xuICBxdW90ZXM6ICcmIzgyMjA7JyAnJiM4MjIxOycgJyYjODIxNjsnICcmIzgyMTc7JzsgfVxuXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2LCBwIHtcbiAgbWFyZ2luLWJvdHRvbTogMTVweDsgfVxuXG51bCB7XG4gIGxpc3Qtc3R5bGU6IG91dHNpZGUgZGlzYztcbiAgcGFkZGluZy1sZWZ0OiAyNHB4OyB9XG5cbm9sIHtcbiAgbGlzdC1zdHlsZTogb3V0c2lkZSBkZWNpbWFsO1xuICBwYWRkaW5nLWxlZnQ6IDI0cHg7IH1cblxuYSwgbGFiZWwsIGlucHV0W3R5cGU9YnV0dG9uXSwgaW5wdXRbdHlwZT1zdWJtaXRdLCBidXR0b24ge1xuICBjdXJzb3I6IHBvaW50ZXI7IH1cblxuZGVsIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBsaW5lLXRocm91Z2g7IH1cblxuYWJiclt0aXRsZV0sIGRmblt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiAxcHggZG90dGVkO1xuICBjdXJzb3I6IGhlbHA7IH1cblxucHJlLCBjb2RlIHtcbiAgYmFja2dyb3VuZDogI2VlZTtcbiAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcbiAgZm9udC1mYW1pbHk6IENvbnNvbGFzLCAnTHVjaWRhIENvbnNvbGUnLCAnQ291cmllciBOZXcnLCBzZXJpZjtcbiAgcGFkZGluZzogMiU7IH1cblxuaW5wdXQsIHNlbGVjdCwgdGV4dGFyZWEge1xuICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgZm9udC1zaXplOiBpbmhlcml0O1xuICBwYWRkaW5nOiAzcHggNnB4OyB9XG5cbmlucHV0LCBzZWxlY3Qge1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyB9XG5cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87IH1cblxuLyogcHJldmVudHMgc2Nyb2xsYmFyIGZyb20gc2hvd2luZyB1cCB3aGVuIHVubmVlZGVkIGluIElFICovXG5zbWFsbCwgc3VwLCBzdWIge1xuICBmb250LXNpemU6IDg1JTsgfVxuXG5zdXAge1xuICB2ZXJ0aWNhbC1hbGlnbjogc3VwZXI7IH1cblxuc3ViIHtcbiAgdmVydGljYWwtYWxpZ246IHN1YjsgfVxuXG50YWJsZSB7XG4gIG1hcmdpbjogMTBweCAwO1xuICBwYWRkaW5nOiAzcHg7IH1cblxudGhlYWQge1xuICBib3JkZXItYm90dG9tOiAycHggc29saWQgI2NjYzsgfVxuXG50aCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkOyB9XG5cbnRoLCB0ciwgdGQge1xuICBwYWRkaW5nOiA0cHggMTJweDsgfVxuXG50ciB7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjY2NjOyB9XG5cbi8qLS0gQ2xlYXJmaXggLS0qL1xuLmNsZWFyZml4OmJlZm9yZSxcbi5jbGVhcmZpeDphZnRlciB7XG4gIGNvbnRlbnQ6IFwiIFwiO1xuICBkaXNwbGF5OiB0YWJsZTsgfVxuXG4uY2xlYXJmaXg6YWZ0ZXIge1xuICBjbGVhcjogYm90aDsgfVxuXG4uaWU3IC5jbGVhcmZpeCB7XG4gIHpvb206IDE7IH1cblxuLyotLSBuZy1jbG9hazogcHJldmVudCBGT1VDIGJlZm9yZSBBbmd1bGFyIEphdmFTY3JpcHQgbG9hZHMgLS0qL1xuW25nXFw6Y2xvYWtdLFxuW25nLWNsb2FrXSxcbltkYXRhLW5nLWNsb2FrXSxcblt4LW5nLWNsb2FrXSxcbi5uZy1jbG9hayxcbi54LW5nLWNsb2FrIHtcbiAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9XG5cbi8qLS0gSW1hZ2UgUmVwbGFjZW1lbnQgLS0qL1xuLmlyIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgdGV4dC1pbmRlbnQ6IDIwMCU7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7IH1cblxuLyotLSBJbmxpbmUgbGluayB0b3VjaCB0YXJnZXRzIC0tKi9cbi50b3VjaCBwIGEge1xuICBtYXJnaW46IDAgLS41ZW07XG4gIHBhZGRpbmc6IDAgLjVlbTsgfVxuXG4vKi0tIEZvcm1zIC0tKi9cbmlucHV0W3R5cGU9XCJ0ZXh0XCJdLFxuaW5wdXRbdHlwZT1cIm51bWJlclwiXSxcbmlucHV0W3R5cGU9XCJwYXNzd29yZFwiXSxcbnRleHRhcmVhIHtcbiAgZm9udC1zaXplOiAxNnB4O1xuICAvKiBmb3IgaU9TIHBob25lcyAqLyB9XG5cbmlucHV0Lm5nLWRpcnR5Lm5nLWludmFsaWQge1xuICBib3JkZXItY29sb3I6IHJnYmEoMTY5LCA2OCwgNjYsIDAuNik7XG4gIGJveC1zaGFkb3c6IDAgMCA2cHggcmdiYSgxNjksIDY4LCA2NiwgMC42KTsgfVxuXG5idXR0b24ge1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgZm9udC1zaXplOiBpbmhlcml0O1xuICBwYWRkaW5nOiA1cHggNHB4O1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyB9XG5cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHQgICBGT05UU1xyXG4tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4vKiBGdWxsIEBmb250LWZhY2UgZGVjbGFyYXRpb24gKi9cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHQgUFJFU0VOVEFUSU9OXHJcbi0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmJvZHkge1xuICBiYWNrZ3JvdW5kOiAjZWVlO1xuICBjb2xvcjogIzMzMztcbiAgZm9udDogbm9ybWFsIDE2cHgvMS4yICdIZWx2ZXRpY2EgTmV1ZScsIEhlbHZldGljYSwgQXJpYWwsIFZlcmRhbmEsIHNhbnMtc2VyaWY7IH1cblxuLmxheW91dC1jYW52YXMge1xuICBiYWNrZ3JvdW5kOiAjZmZmOyB9XG5cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBDb250ZW50IC0tKi9cbi5jb250ZW50LXdyYXBwZXIge1xuICBwYWRkaW5nOiAzJTsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAgIC5jb250ZW50LXdyYXBwZXIge1xuICAgICAgcGFkZGluZzogMS41JSAzJTsgfSB9XG5cbi5jb250ZW50LWhlYWRpbmcge1xuICBmb250LXNpemU6IDM2cHg7XG4gIG1hcmdpbjogLTEuNSUgMCAyMHB4OyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgLmNvbnRlbnQtaGVhZGluZyB7XG4gICAgICBtYXJnaW4tdG9wOiAwO1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyOyB9IH1cblxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gTEFZT1VUIEZVTkNUSU9OQUxJVFlcclxuLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuYm9keSB7XG4gIG1pbi13aWR0aDogMzIwcHg7IH1cblxuLmxheW91dC1vdmVyZmxvdyB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIC8qIG5lY2Vzc2FyeSB0byBoYW5kbGUgb2ZmY2FudmFzIHNjcm9sbGJhciBiZWhhdmlvciAqLyB9XG5cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBPZmYtY2FudmFzIEZ1bmN0aW9uYWxpdHkgLS0qL1xuLyotLSBDb250ZW50IGNhbnZhcyB3cmFwcGVyIC0tKi9cbi5sYXlvdXQtY2FudmFzIHtcbiAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlOyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgLmxheW91dC1jYW52YXMge1xuICAgICAgdHJhbnNpdGlvbjogbm9uZTtcbiAgICAgIHRyYW5zZm9ybTogbm9uZTsgfSB9XG4gIC5jc3N0cmFuc2Zvcm1zM2QgLmxheW91dC1jYW52YXMge1xuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAyNTBtcyBlYXNlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMCwgMCk7IH1cbiAgLmNzc3RyYW5zZm9ybXMzZCAubmF2LW9wZW4gLmxheW91dC1jYW52YXMge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMjcwcHgsIDAsIDApOyB9XG4gIC5uby1jc3N0cmFuc2Zvcm1zM2QgLm5hdi1vcGVuIC5sYXlvdXQtY2FudmFzIHtcbiAgICBsZWZ0OiAyNzBweDsgfVxuXG4vKi0tIEhlYWRlciAtLSovXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAuaGVhZGVyLW1vYmlsZS1wYWdlIHtcbiAgICBkaXNwbGF5OiBub25lOyB9IH1cblxuLyotLSBOYXZpZ2F0aW9uIC0tKi9cbi5oZWFkZXIgLm5hdiB7XG4gIGJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgZGlzcGxheTogbm9uZTtcbiAgLyogZGVhbCB3aXRoIEZPVUMgKi9cbiAgaGVpZ2h0OiAxMDAlO1xuICBvdmVyZmxvdy15OiBhdXRvO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgd2lkdGg6IDI3MHB4OyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgLmhlYWRlciAubmF2IHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgd2lkdGg6IDEwMCU7IH0gfVxuICAubmF2LWNsb3NlZCAuaGVhZGVyIC5uYXYsXG4gIC5uYXYtb3BlbiAuaGVhZGVyIC5uYXYge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIC8qIGRlYWwgd2l0aCBGT1VDICovIH1cbiAgLmNzc3RyYW5zZm9ybXMzZCAuaGVhZGVyIC5uYXYge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoLTEwMCUsIDAsIDApOyB9XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAgIC5jc3N0cmFuc2Zvcm1zM2QgLmhlYWRlciAubmF2IHtcbiAgICAgICAgdHJhbnNmb3JtOiBub25lOyB9IH1cbiAgLm5vLWNzc3RyYW5zZm9ybXMzZCAubmF2LWNsb3NlZCAuaGVhZGVyIC5uYXYge1xuICAgIGxlZnQ6IC0xMDAlOyB9XG4gIC5uby1jc3N0cmFuc2Zvcm1zM2QgLm5hdi1vcGVuIC5oZWFkZXIgLm5hdiB7XG4gICAgbGVmdDogLTI3MHB4OyB9XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAgIC5uby1jc3N0cmFuc2Zvcm1zM2QgLm5hdi1vcGVuIC5oZWFkZXIgLm5hdiB7XG4gICAgICAgIGxlZnQ6IDA7IH0gfVxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblx0ICAgUFJJTlRcclxuLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuQG1lZGlhIHByaW50IHtcbiAgKiB7XG4gICAgYmFja2dyb3VuZDogI2ZmZjsgfVxuICBib2R5IHtcbiAgICBjb2xvcjogIzAwMDtcbiAgICBmb250OiBub3JtYWwgMTZweC8xLjQgR2VvcmdpYSwgJ1RpbWVzIE5ldyBSb21hbicsIHNlcmlmOyB9XG4gIC8qLS0gSGlkZGVuIEVsZW1lbnRzIC0tKi9cbiAgLmhlYWRlcixcbiAgLmZvb3RlciB7XG4gICAgZGlzcGxheTogbm9uZTsgfVxuICAvKi0tIFNob3cgbGluayBVUkxzIC0tKi9cbiAgYTpsaW5rLFxuICBhOnZpc2l0ZWQge1xuICAgIGNvbG9yOiBibHVlO1xuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyB9XG4gIGE6bGluazphZnRlcixcbiAgYTp2aXNpdGVkOmFmdGVyIHtcbiAgICBjb250ZW50OiBcIiBbXCIgYXR0cihocmVmKSBcIl0gXCI7XG4gICAgZm9udC1zaXplOiA3NSU7IH0gfVxuXG4vKi0tIE1vZHVsZXMgLS0qL1xuLyotLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cdCAgICBIRUFERVJcclxuLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLmhlYWRlci1tb2JpbGUtcGFnZSB7XG4gIGJhY2tncm91bmQ6ICM1NTU7XG4gIGNvbG9yOiAjZmZmO1xuICBoZWlnaHQ6IDUwcHg7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAuaGVhZGVyLW1vYmlsZS1wYWdlLXNpdGVUaXRsZSB7XG4gICAgZm9udC1zaXplOiAzMHB4O1xuICAgIGxpbmUtaGVpZ2h0OiA1MHB4O1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiAwIDAgMCA1MHB4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDA7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHdpZHRoOiAxMDAlOyB9XG5cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHQgTkFWSUdBVElPTlxyXG4tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gSGFtYnVyZ2VyIG1lbnUgdG9nZ2xlIC0tKi9cbi50b2dnbGUtb2ZmY2FudmFzIHtcbiAgYmFja2dyb3VuZDogIzU1NTtcbiAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjUpO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGhlaWdodDogNTBweDtcbiAgcGFkZGluZzogMjMuNXB4IDEzcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB3aWR0aDogNTBweDtcbiAgei1pbmRleDogMTAwOyB9XG4gIC50b2dnbGUtb2ZmY2FudmFzIHNwYW4sXG4gIC50b2dnbGUtb2ZmY2FudmFzIHNwYW46YmVmb3JlLFxuICAudG9nZ2xlLW9mZmNhbnZhcyBzcGFuOmFmdGVyIHtcbiAgICBiYWNrZ3JvdW5kOiAjZmZmO1xuICAgIGJvcmRlci1yYWRpdXM6IDFweDtcbiAgICBjb250ZW50OiAnJztcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBoZWlnaHQ6IDNweDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdHJhbnNpdGlvbjogYWxsIDI1MG1zIGVhc2UtaW4tb3V0O1xuICAgIHdpZHRoOiAyNHB4OyB9XG4gIC50b2dnbGUtb2ZmY2FudmFzIHNwYW46YmVmb3JlIHtcbiAgICB0b3A6IC05cHg7IH1cbiAgLnRvZ2dsZS1vZmZjYW52YXMgc3BhbjphZnRlciB7XG4gICAgYm90dG9tOiAtOXB4OyB9XG4gIC5uYXYtb3BlbiAudG9nZ2xlLW9mZmNhbnZhcyBzcGFuIHtcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDsgfVxuICAgIC5uYXYtb3BlbiAudG9nZ2xlLW9mZmNhbnZhcyBzcGFuOmJlZm9yZSwgLm5hdi1vcGVuIC50b2dnbGUtb2ZmY2FudmFzIHNwYW46YWZ0ZXIge1xuICAgICAgdG9wOiAwOyB9XG4gICAgLm5hdi1vcGVuIC50b2dnbGUtb2ZmY2FudmFzIHNwYW46YmVmb3JlIHtcbiAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTsgfVxuICAgIC5uYXYtb3BlbiAudG9nZ2xlLW9mZmNhbnZhcyBzcGFuOmFmdGVyIHtcbiAgICAgIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7IH1cblxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIE5hdmlnYXRpb24gLS0qL1xuLmhlYWRlciAubmF2IHtcbiAgYm94LXNoYWRvdzogaW5zZXQgLThweCAwIDhweCAtNnB4IHJnYmEoMCwgMCwgMCwgMC4yKTtcbiAgcGFkZGluZzogMyU7IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAuaGVhZGVyIC5uYXYge1xuICAgICAgYmFja2dyb3VuZDogIzU1NTtcbiAgICAgIGJveC1zaGFkb3c6IG5vbmU7XG4gICAgICBwYWRkaW5nOiAxLjUlIDMlOyB9IH1cbiAgLmhlYWRlciAubmF2IC5hY3RpdmUgLm5hdi1saXN0LWl0ZW0tdGV4dCB7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAgICAgLmhlYWRlciAubmF2IC5hY3RpdmUgLm5hdi1saXN0LWl0ZW0tdGV4dCB7XG4gICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNSk7IH0gfVxuICAuaGVhZGVyIC5uYXYtbGlzdCB7XG4gICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgIHBhZGRpbmctbGVmdDogMDsgfVxuICAgIC5oZWFkZXIgLm5hdi1saXN0IGEge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBwYWRkaW5nOiA2cHg7IH1cbiAgICAgIC5oZWFkZXIgLm5hdi1saXN0IGE6aG92ZXIsIC5oZWFkZXIgLm5hdi1saXN0IGE6YWN0aXZlLCAuaGVhZGVyIC5uYXYtbGlzdCBhOmZvY3VzIHtcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAgIC5oZWFkZXIgLm5hdi1saXN0IHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZmxleC13cmFwOiB3cmFwO1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgd2lkdGg6IDEwMCU7IH1cbiAgICAgICAgLmhlYWRlciAubmF2LWxpc3QgYSxcbiAgICAgICAgLmhlYWRlciAubmF2LWxpc3QgYTpob3ZlcixcbiAgICAgICAgLmhlYWRlciAubmF2LWxpc3QgYTphY3RpdmUsXG4gICAgICAgIC5oZWFkZXIgLm5hdi1saXN0IGE6Zm9jdXMge1xuICAgICAgICAgIGNvbG9yOiAjZmZmOyB9XG4gICAgICAgIC5oZWFkZXIgLm5hdi1saXN0IGxpIHtcbiAgICAgICAgICBwYWRkaW5nOiAwIDIwcHg7IH0gfVxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblx0ICAgIEZPT1RFUlxyXG4tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4uZm9vdGVyIHtcbiAgcGFkZGluZzogMyU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAgIC5mb290ZXIge1xuICAgICAgcGFkZGluZzogMS41JSAzJTsgfSB9XG5cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHQgICAgTE9BRElOR1xyXG4tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4ubG9hZGluZy13cmFwcGVyIHtcbiAgaGVpZ2h0OiAxMDAlO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIHotaW5kZXg6IDk5OTsgfVxuXG4ubG9hZGluZy1vdmVybGF5IHtcbiAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjkpO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgYm90dG9tOiAwO1xuICB3aWR0aDogMTAwJTsgfVxuXG4ubG9hZGluZy1zcGlubmVyIHtcbiAgbWFyZ2luOiAtMTZweCAwIDAgLTE2cHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDUwJTsgfVxuXG4vKi0tIFBhZ2VzIC0tKi9cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHQgICAgNDA0XHJcbi0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbiIsIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHQgICBGT05UU1xyXG4tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcblxyXG4vKiBGdWxsIEBmb250LWZhY2UgZGVjbGFyYXRpb24gKi9cclxuXHJcbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogMzIwcHgpLCBzY3JlZW4gYW5kIChtYXgtZGV2aWNlLXdpZHRoOiA3MjBweCkgYW5kIChvcmllbnRhdGlvbjpwb3J0cmFpdCksIHNjcmVlbiBhbmQgKG1heC1kZXZpY2Utd2lkdGg6IDEyODBweCkgYW5kIChvcmllbnRhdGlvbjpsYW5kc2NhcGUpIHtcclxuXHQvKiBmb3IgbW9iaWxlIGRldmljZXMsIG9ubHkgbG9hZCBTVkcgZm9udFxyXG5cdHNlZTogaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8yMDg5MDQ4OS9mb250LWZhY2UtZGVjbGFyYXRpb25zLWRvbnQtd29yay1pbi1hbmRyb2lkLTQtMy1pbnRlcm5ldC1icm93c2VyXHJcblxyXG5cdEBmb250LWZhY2Uge1xyXG5cdFx0Zm9udC1mYW1pbHk6ICdGb250TmFtZSc7XHJcblx0XHRzcmM6IHVybCgnLi4vZm9udHMvRm9udE5hbWUuc3ZnI0ZvbnROYW1lJykgZm9ybWF0KCdzdmcnKTtcclxuXHRcdGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcblx0XHRmb250LXN0eWxlOiBub3JtYWw7XHJcblx0fSAqL1xyXG59IiwiLyotLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cdCBQUkVTRU5UQVRJT05cclxuLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG5cclxuYm9keSB7XHJcblx0YmFja2dyb3VuZDogJGNvbG9yLWJnLWxpZ2h0O1xyXG5cdGNvbG9yOiAkY29sb3ItdGV4dDtcclxuXHRmb250OiBub3JtYWwgMTZweC8xLjIgJ0hlbHZldGljYSBOZXVlJywgSGVsdmV0aWNhLCBBcmlhbCwgVmVyZGFuYSwgc2Fucy1zZXJpZjtcclxufVxyXG4ubGF5b3V0LWNhbnZhcyB7XHJcblx0YmFja2dyb3VuZDogJGNvbG9yLWJnO1xyXG59XHJcblxyXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gQ29udGVudCAtLSovXHJcblxyXG4uY29udGVudC13cmFwcGVyIHtcclxuXHRwYWRkaW5nOiAkcGFkZGluZy1zY3JlZW4tc21hbGw7XHJcblxyXG5cdEBpbmNsdWRlIG1xKCRtcS1sYXJnZSkge1xyXG5cdFx0cGFkZGluZzogJHBhZGRpbmctc2NyZWVuLWxhcmdlO1xyXG5cdH1cclxufVxyXG4uY29udGVudC1oZWFkaW5nIHtcclxuXHRmb250LXNpemU6IDM2cHg7XHJcblx0bWFyZ2luOiAtMS41JSAwIDIwcHg7XHJcblxyXG5cdEBpbmNsdWRlIG1xKCRtcS1sYXJnZSkge1xyXG5cdFx0bWFyZ2luLXRvcDogMDtcclxuXHRcdHRleHQtYWxpZ246IGNlbnRlcjtcclxuXHR9XHJcbn0iLCIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiBMQVlPVVQgRlVOQ1RJT05BTElUWVxyXG4tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcblxyXG5ib2R5IHtcclxuXHRtaW4td2lkdGg6IDMyMHB4O1xyXG59XHJcbi5sYXlvdXQtb3ZlcmZsb3cge1xyXG5cdG92ZXJmbG93OiBoaWRkZW47XHQvKiBuZWNlc3NhcnkgdG8gaGFuZGxlIG9mZmNhbnZhcyBzY3JvbGxiYXIgYmVoYXZpb3IgKi9cclxufVxyXG5cclxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIE9mZi1jYW52YXMgRnVuY3Rpb25hbGl0eSAtLSovXHJcblxyXG4vKi0tIENvbnRlbnQgY2FudmFzIHdyYXBwZXIgLS0qL1xyXG5cclxuLmxheW91dC1jYW52YXMge1xyXG5cdGJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcclxuXHRwb3NpdGlvbjogcmVsYXRpdmU7XHJcblx0bGVmdDogMDtcclxuXHR3aWR0aDogMTAwJTtcclxuXHJcblx0QGluY2x1ZGUgbXEoJG1xLWxhcmdlKSB7XHJcblx0XHR0cmFuc2l0aW9uOiBub25lO1xyXG5cdFx0dHJhbnNmb3JtOiBub25lO1xyXG5cdH1cclxuXHQuY3NzdHJhbnNmb3JtczNkICYge1xyXG5cdFx0dHJhbnNpdGlvbjogdHJhbnNmb3JtIDI1MG1zIGVhc2U7XHJcblx0XHR0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsMCwwKTtcclxuXHR9XHJcblx0LmNzc3RyYW5zZm9ybXMzZCAubmF2LW9wZW4gJiB7XHJcblx0XHR0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDI3MHB4LDAsMCk7XHJcblx0fVxyXG5cdC5uby1jc3N0cmFuc2Zvcm1zM2QgLm5hdi1vcGVuICYge1xyXG5cdFx0bGVmdDogMjcwcHg7XHJcblx0fVxyXG59XHJcblxyXG4vKi0tIEhlYWRlciAtLSovXHJcblxyXG4uaGVhZGVyLW1vYmlsZS1wYWdlIHtcclxuXHRAaW5jbHVkZSBtcSgkbXEtbGFyZ2UpIHtcclxuXHRcdGRpc3BsYXk6IG5vbmU7XHJcblx0fVxyXG59XHJcblxyXG4vKi0tIE5hdmlnYXRpb24gLS0qL1xyXG5cclxuLmhlYWRlciAubmF2IHtcclxuXHRiYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XHJcblx0ZGlzcGxheTogbm9uZTtcdC8qIGRlYWwgd2l0aCBGT1VDICovXHJcblx0aGVpZ2h0OiAxMDAlO1xyXG5cdG92ZXJmbG93LXk6IGF1dG87XHJcblx0cG9zaXRpb246IGFic29sdXRlO1xyXG5cdHRvcDogMDtcclxuXHR3aWR0aDogMjcwcHg7XHJcblxyXG5cdEBpbmNsdWRlIG1xKCRtcS1sYXJnZSkge1xyXG5cdFx0ZGlzcGxheTogYmxvY2s7XHJcblx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XHJcblx0XHR3aWR0aDogMTAwJTtcclxuXHR9XHJcblx0Lm5hdi1jbG9zZWQgJixcclxuXHQubmF2LW9wZW4gJiB7XHJcblx0XHRkaXNwbGF5OiBibG9jaztcdC8qIGRlYWwgd2l0aCBGT1VDICovXHJcblx0fVxyXG5cdC5jc3N0cmFuc2Zvcm1zM2QgJiB7XHJcblx0XHR0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKC0xMDAlLDAsMCk7XHJcblxyXG5cdFx0QGluY2x1ZGUgbXEoJG1xLWxhcmdlKSB7XHJcblx0XHRcdHRyYW5zZm9ybTogbm9uZTtcclxuXHRcdH1cclxuXHR9XHJcblx0Lm5vLWNzc3RyYW5zZm9ybXMzZCAubmF2LWNsb3NlZCAmIHtcclxuXHRcdGxlZnQ6IC0xMDAlO1xyXG5cdH1cclxuXHQubm8tY3NzdHJhbnNmb3JtczNkIC5uYXYtb3BlbiAmIHtcclxuXHRcdGxlZnQ6IC0yNzBweDtcclxuXHJcblx0XHRAaW5jbHVkZSBtcSgkbXEtbGFyZ2UpIHtcclxuXHRcdFx0bGVmdDogMDtcclxuXHRcdH1cclxuXHR9XHJcbn0iLCIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblx0ICAgUFJJTlRcclxuLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG5cclxuQG1lZGlhIHByaW50IHtcclxuXHJcblx0KiB7XHJcblx0XHRiYWNrZ3JvdW5kOiAjZmZmO1xyXG5cdH1cclxuXHRib2R5IHtcclxuXHRcdGNvbG9yOiAjMDAwO1xyXG5cdFx0Zm9udDogbm9ybWFsIDE2cHgvMS40IEdlb3JnaWEsICdUaW1lcyBOZXcgUm9tYW4nLCBzZXJpZjtcclxuXHR9XHJcblxyXG5cdC8qLS0gSGlkZGVuIEVsZW1lbnRzIC0tKi9cclxuXHJcblx0LmhlYWRlcixcclxuXHQuZm9vdGVyIHtcclxuXHRcdGRpc3BsYXk6IG5vbmU7XHJcblx0fVxyXG5cclxuXHQvKi0tIFNob3cgbGluayBVUkxzIC0tKi9cclxuXHJcblx0YTpsaW5rLFxyXG5cdGE6dmlzaXRlZCB7XHJcblx0XHRjb2xvcjogYmx1ZTtcclxuXHRcdHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xyXG5cdH1cclxuXHRhOmxpbms6YWZ0ZXIsXHJcblx0YTp2aXNpdGVkOmFmdGVyIHtcclxuXHRcdGNvbnRlbnQ6XCIgW1wiIGF0dHIoaHJlZikgXCJdIFwiO1xyXG5cdFx0Zm9udC1zaXplOiA3NSU7XHJcblx0fVxyXG5cclxufSIsIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHQgICAgSEVBREVSXHJcbi0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuXHJcbi5oZWFkZXItbW9iaWxlLXBhZ2Uge1xyXG5cdGJhY2tncm91bmQ6ICRjb2xvci1uYXYtYmc7XHJcblx0Y29sb3I6ICRjb2xvci13aGl0ZTtcclxuXHRoZWlnaHQ6IDUwcHg7XHJcblx0bWFyZ2luLWJvdHRvbTogMTBweDtcclxuXHRwb3NpdGlvbjogcmVsYXRpdmU7XHJcblxyXG5cdCYtc2l0ZVRpdGxlIHtcclxuXHRcdGZvbnQtc2l6ZTogMzBweDtcclxuXHRcdGxpbmUtaGVpZ2h0OiA1MHB4O1xyXG5cdFx0bWFyZ2luOiAwO1xyXG5cdFx0cGFkZGluZzogMCAwIDAgNTBweDtcclxuXHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuXHRcdHRvcDogMDtcclxuXHRcdHRleHQtYWxpZ246IGNlbnRlcjtcclxuXHRcdHdpZHRoOiAxMDAlO1xyXG5cdH1cclxufSIsIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHQgTkFWSUdBVElPTlxyXG4tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcblxyXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gSGFtYnVyZ2VyIG1lbnUgdG9nZ2xlIC0tKi9cclxuXHJcbi50b2dnbGUtb2ZmY2FudmFzIHtcclxuXHRiYWNrZ3JvdW5kOiAkY29sb3ItbmF2LWJnO1xyXG5cdGJvcmRlci1yaWdodDogMXB4IHNvbGlkICRjb2xvci1kaXNhYmxlZC1yZ2JhO1xyXG5cdGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuXHRoZWlnaHQ6IDUwcHg7XHJcblx0cGFkZGluZzogMjMuNXB4IDEzcHg7XHJcblx0cG9zaXRpb246IHJlbGF0aXZlO1xyXG5cdHRleHQtYWxpZ246IGNlbnRlcjtcclxuXHR3aWR0aDogNTBweDtcclxuXHR6LWluZGV4OiAxMDA7XHJcblxyXG5cdHNwYW4sXHJcblx0c3BhbjpiZWZvcmUsXHJcblx0c3BhbjphZnRlciB7XHJcblx0XHRiYWNrZ3JvdW5kOiAkY29sb3Itd2hpdGU7XHJcblx0XHRib3JkZXItcmFkaXVzOiAxcHg7XHJcblx0XHRjb250ZW50OiAnJztcclxuXHRcdGRpc3BsYXk6IGJsb2NrO1xyXG5cdFx0aGVpZ2h0OiAzcHg7XHJcblx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XHJcblx0XHR0cmFuc2l0aW9uOiBhbGwgMjUwbXMgZWFzZS1pbi1vdXQ7XHJcblx0XHR3aWR0aDogMjRweDtcclxuXHR9XHJcblx0c3BhbiB7XHJcblx0XHQmOmJlZm9yZSB7XHJcblx0XHRcdHRvcDogLTlweDtcclxuXHRcdH1cclxuXHRcdCY6YWZ0ZXIge1xyXG5cdFx0XHRib3R0b206IC05cHg7XHJcblx0XHR9XHJcblx0fVxyXG5cdC5uYXYtb3BlbiAmIHtcclxuXHRcdHNwYW4ge1xyXG5cdFx0XHRiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcclxuXHJcblx0XHRcdCY6YmVmb3JlLFxyXG5cdFx0XHQmOmFmdGVyIHtcclxuXHRcdFx0XHR0b3A6IDA7XHJcblx0XHRcdH1cclxuXHRcdFx0JjpiZWZvcmUge1xyXG5cdFx0XHRcdHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcclxuXHRcdFx0fVxyXG5cdFx0XHQmOmFmdGVyIHtcclxuXHRcdFx0XHR0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fVxyXG59XHJcblxyXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gTmF2aWdhdGlvbiAtLSovXHJcblxyXG4uaGVhZGVyIC5uYXYge1xyXG5cdGJveC1zaGFkb3c6IGluc2V0IC04cHggMCA4cHggLTZweCByZ2JhKDAsMCwwLDAuMik7XHJcblx0cGFkZGluZzogJHBhZGRpbmctc2NyZWVuLXNtYWxsO1xyXG5cclxuXHRAaW5jbHVkZSBtcSgkbXEtbGFyZ2UpIHtcclxuXHRcdGJhY2tncm91bmQ6ICRjb2xvci1uYXYtYmc7XHJcblx0XHRib3gtc2hhZG93OiBub25lO1xyXG5cdFx0cGFkZGluZzogJHBhZGRpbmctc2NyZWVuLWxhcmdlO1xyXG5cdH1cclxuXHJcblx0LmFjdGl2ZSAubmF2LWxpc3QtaXRlbS10ZXh0IHtcclxuXHRcdGZvbnQtd2VpZ2h0OiBib2xkO1xyXG5cclxuXHRcdEBpbmNsdWRlIG1xKCRtcS1sYXJnZSkge1xyXG5cdFx0XHRib3JkZXItYm90dG9tOiAxcHggc29saWQgJGNvbG9yLWRpc2FibGVkLXJnYmE7XHJcblx0XHR9XHJcblx0fVxyXG5cdCYtbGlzdCB7XHJcblx0XHRsaXN0LXN0eWxlOiBub25lO1xyXG5cdFx0bWFyZ2luLWJvdHRvbTogMDtcclxuXHRcdHBhZGRpbmctbGVmdDogMDtcclxuXHJcblx0XHRhIHtcclxuXHRcdFx0ZGlzcGxheTogYmxvY2s7XHJcblx0XHRcdHBhZGRpbmc6IDZweDtcclxuXHJcblx0XHRcdCY6aG92ZXIsXHJcblx0XHRcdCY6YWN0aXZlLFxyXG5cdFx0XHQmOmZvY3VzIHtcclxuXHRcdFx0XHR0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHJcblx0XHRAaW5jbHVkZSBtcSgkbXEtbGFyZ2UpIHtcclxuXHRcdFx0ZGlzcGxheTogZmxleDtcclxuXHRcdFx0ZmxleC13cmFwOiB3cmFwO1xyXG5cdFx0XHRqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuXHRcdFx0cGFkZGluZzogMDtcclxuXHRcdFx0d2lkdGg6IDEwMCU7XHJcblxyXG5cdFx0XHRhLFxyXG5cdFx0XHRhOmhvdmVyLFxyXG5cdFx0XHRhOmFjdGl2ZSxcclxuXHRcdFx0YTpmb2N1cyB7XHJcblx0XHRcdFx0Y29sb3I6ICRjb2xvci13aGl0ZTtcclxuXHRcdFx0fVxyXG5cdFx0XHRsaSB7XHJcblx0XHRcdFx0cGFkZGluZzogMCAyMHB4O1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fVxyXG59IiwiLyotLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cdCAgICBGT09URVJcclxuLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG5cclxuLmZvb3RlciB7XHJcblx0cGFkZGluZzogJHBhZGRpbmctc2NyZWVuLXNtYWxsO1xyXG5cdHRleHQtYWxpZ246IGNlbnRlcjtcclxuXHJcblx0QGluY2x1ZGUgbXEoJG1xLWxhcmdlKSB7XHJcblx0XHRwYWRkaW5nOiAkcGFkZGluZy1zY3JlZW4tbGFyZ2U7XHJcblx0fVxyXG59IiwiLyotLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cdCAgICBMT0FESU5HXHJcbi0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuXHJcbi5sb2FkaW5nIHtcclxuXHQmLXdyYXBwZXIge1xyXG5cdFx0aGVpZ2h0OiAxMDAlO1xyXG5cdFx0cG9zaXRpb246IGZpeGVkO1xyXG5cdFx0XHR0b3A6IDA7IGxlZnQ6IDA7XHJcblx0XHR3aWR0aDogMTAwJTtcclxuXHRcdHotaW5kZXg6IDk5OTtcclxuXHR9XHJcblx0Ji1vdmVybGF5IHtcclxuXHRcdGJhY2tncm91bmQ6IHJnYmEoMjU1LDI1NSwyNTUsLjkpO1xyXG5cdFx0cG9zaXRpb246IGFic29sdXRlO1xyXG5cdFx0XHR0b3A6IDA7IGJvdHRvbTogMDtcclxuXHRcdHdpZHRoOiAxMDAlO1xyXG5cdH1cclxuXHQmLXNwaW5uZXIge1xyXG5cdFx0bWFyZ2luOiAtMTZweCAwIDAgLTE2cHg7XHJcblx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XHJcblx0XHRcdHRvcDogNTAlOyBsZWZ0OiA1MCU7XHJcblx0fVxyXG59IiwiLyotLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cdCAgICA0MDRcclxuLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG5cclxuLmVycm9yNDA0LXdyYXBwZXIge1xyXG5cclxufSJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ== */
